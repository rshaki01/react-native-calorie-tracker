{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Svg, { Circle } from 'react-native-svg';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CircleProgress = function CircleProgress(_ref) {\n  var progress = _ref.progress;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    circumference = _useState2[0],\n    setCircumference = _useState2[1];\n  useEffect(function () {\n    var radius = 50;\n    var calculatedCircumference = 2 * Math.PI * radius;\n    setCircumference(calculatedCircumference);\n  }, []);\n  return _jsx(View, {\n    children: _jsxs(Svg, {\n      width: \"200\",\n      height: \"200\",\n      children: [_jsx(Circle, {\n        cx: \"100\",\n        cy: \"100\",\n        r: \"50\",\n        stroke: \"#CCCCCC\",\n        strokeWidth: \"20\",\n        strokeDasharray: circumference,\n        strokeDashoffset: circumference * (1 - progress)\n      }), _jsx(Circle, {\n        cx: \"100\",\n        cy: \"100\",\n        r: \"50\",\n        strokeWidth: \"10\",\n        strokeDasharray: circumference,\n        strokeDashoffset: circumference * (1 - progress)\n      })]\n    })\n  });\n};\nexport default CircleProgress;","map":{"version":3,"names":["React","useState","useEffect","View","Svg","Circle","jsx","_jsx","jsxs","_jsxs","CircleProgress","_ref","progress","_useState","_useState2","_slicedToArray","circumference","setCircumference","radius","calculatedCircumference","Math","PI","children","width","height","cx","cy","r","stroke","strokeWidth","strokeDasharray","strokeDashoffset"],"sources":["/Users/rafatshakil/Desktop/React/CalorieTrackerNative/components/CircleProgress.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { View } from 'react-native';\nimport Svg, { Circle } from 'react-native-svg';\n\nconst CircleProgress = ({ progress }) => {\n\n    const [circumference, setCircumference] = useState(0);\n\n    useEffect(() => {\n        const radius = 50; // Change this based on your desired size\n        const calculatedCircumference = 2 * Math.PI * radius;\n        setCircumference(calculatedCircumference);\n      }, []);\n\n\n  return (\n    <View>\n        <Svg width=\"200\" height=\"200\">\n            <Circle\n                cx=\"100\"\n                cy=\"100\"\n                r=\"50\"\n                stroke=\"#CCCCCC\"  // Change this to the progress color\n                strokeWidth=\"20\"\n                strokeDasharray={circumference}\n                strokeDashoffset={circumference * (1 - progress)}\n            />\n            <Circle\n                cx=\"100\"\n                cy=\"100\"\n                r=\"50\"\n                // stroke=\"#3498db\"  // Change this to the progress color\n                strokeWidth=\"10\"\n                strokeDasharray={circumference}\n                strokeDashoffset={circumference * (1 - progress)}\n            />\n        </Svg>\n    </View>\n  )\n}\n\nexport default CircleProgress\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,OAAAC,IAAA;AAElD,OAAOC,GAAG,IAAIC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/C,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAE9B,IAAAC,SAAA,GAA0CZ,QAAQ,CAAC,CAAC,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9CG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EAEtCZ,SAAS,CAAC,YAAM;IACZ,IAAMgB,MAAM,GAAG,EAAE;IACjB,IAAMC,uBAAuB,GAAG,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAGH,MAAM;IACpDD,gBAAgB,CAACE,uBAAuB,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAGV,OACEZ,IAAA,CAACJ,IAAI;IAAAmB,QAAA,EACDb,KAAA,CAACL,GAAG;MAACmB,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC,KAAK;MAAAF,QAAA,GACzBf,IAAA,CAACF,MAAM;QACHoB,EAAE,EAAC,KAAK;QACRC,EAAE,EAAC,KAAK;QACRC,CAAC,EAAC,IAAI;QACNC,MAAM,EAAC,SAAS;QAChBC,WAAW,EAAC,IAAI;QAChBC,eAAe,EAAEd,aAAc;QAC/Be,gBAAgB,EAAEf,aAAa,IAAI,CAAC,GAAGJ,QAAQ;MAAE,CACpD,CAAC,EACFL,IAAA,CAACF,MAAM;QACHoB,EAAE,EAAC,KAAK;QACRC,EAAE,EAAC,KAAK;QACRC,CAAC,EAAC,IAAI;QAENE,WAAW,EAAC,IAAI;QAChBC,eAAe,EAAEd,aAAc;QAC/Be,gBAAgB,EAAEf,aAAa,IAAI,CAAC,GAAGJ,QAAQ;MAAE,CACpD,CAAC;IAAA,CACD;EAAC,CACJ,CAAC;AAEX,CAAC;AAED,eAAeF,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}